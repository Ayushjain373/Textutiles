{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","name","backgroundColor","cursor","onChange","event","target","value","rows","disabled","length","newText","toUpperCase","toLowerCase","upText","split","map","newT","charAt","slice","join","navigator","clipboard","writeText","alert","filter","element","Alert","height","class","role","word","lower","capital","msg","App","setmode","setalert","showAlert","message","setTimeout","document","body","purpleMode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b3e7964a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to   =\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to   =\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\"   to =\"/about\">About</Link>\r\n            </li>\r\n\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n\r\n          {/* <div className=\"d-flex\">\r\n            <div className=\"bg-primary rounded mx-3\" style={{ height: '25px', width: '25px' }}></div>\r\n          </div> */}\r\n\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckChecked\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n\r\n  title: PropTypes.string\r\n}","import React from 'react'\r\nimport react,  {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n\r\n    const handleupclick = ()=>{\r\n        let newText = text.toUpperCase();\r\n\r\n        setText(newText);\r\n    }\r\n\r\n    const handleextraspace=()=>{\r\n\r\n        let newText = text.split(/[ ]+/);\r\n\r\n        setText(newText.join(\"\"));\r\n    }\r\n    \r\n    const handleClclick = ()=>{\r\n        let newText = \" \";\r\n\r\n        setText(newText);\r\n    }\r\n\r\n    const handleLoclick = ()=>{\r\n        let newText = text.toLowerCase();\r\n\r\n        setText(newText);\r\n    }\r\n    const handleCpclick = ()=>{\r\n     \r\n            \r\n            let newText = text.split(\" \").map(newT=>{\r\n\r\n                // let firstLetter = newT.slice(0,1);\r\n                // let rest = newT.slice(1);\r\n\r\n                // firstLetter = firstLetter.toUpperCase();\r\n\r\n                //   setText(`${firstLetter} ${rest}`)\r\n                return newT.charAt(0).toUpperCase()+ newT.slice(1);\r\n\r\n            });\r\n            let upText = newText.join(\" \");\r\n           setText(upText);\r\n\r\n        \r\n\r\n        \r\n    }\r\n    const handleCopy =()=>{\r\n\r\n        // let text = document.getElementById(\"myBox\");\r\n\r\n        // text.select();\r\n        navigator.clipboard.writeText(text)\r\n\r\n        props.alert(\"copied to clipboard!\",\"success\")\r\n\r\n\r\n\r\n    }\r\n    const handleOnchange = (event)=>{\r\n          setText(event.target.value);\r\n    }\r\n    const[text, setText]= useState('')\r\n        //upText(\" new text\")\r\n    return (\r\n        <>\r\n            <div className=\"container\"style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n                <h1 className=\"text-center\">{props.heading}</h1>\r\n                <label htmlFor=\"myBox\" className=\"form-label\"></label>\r\n                <textarea name=\"\" className=\"form-control\" id=\"myBox\" style={{backgroundColor:props.mode==='dark'?'#042743':'white',color: props.mode==='dark'?'white':'#042743',cursor: 'pointer'}} onChange={handleOnchange} value={text} rows=\"10\"></textarea>\r\n                <button  disabled={text.length==0} className=\"btn btn-primary my-2\" onClick={handleupclick}>Convert To Uppercase</button>\r\n                <button  disabled={text.length==0} className=\"btn btn-primary my-2 mx-2\" onClick={handleLoclick}>Convert To Lowercase</button>  \r\n                 \r\n                <button  disabled={text.length==0} className=\"btn btn-primary my-2 mx-2\" onClick={handleCpclick}>Captilize</button> \r\n                <button  disabled={text.length==0} className=\"btn btn-primary my-2 mx-2\" onClick={handleCopy}>Copy Text</button> \r\n                <button  disabled={text.length==0} className=\"btn btn-primary my-2 mx-2\" onClick={handleextraspace}>Remove Extra Space</button>   \r\n                <button disabled={text.length==0} className=\"btn btn-primary my-2 mx-2\" onClick={handleClclick}>Clear Text</button>\r\n            </div>\r\n\r\n            <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                <h2 className=\"text-center\">Your Text Summary</h2>\r\n                {/* <p>{text.split{\" \"}.length} words and  {}</p> */}\r\n                <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n                <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n\r\n                <h3 className=\"text-center\">Preview of text</h3>\r\n                <p>{text.length>0?text: \"Nothing to preview\"}</p>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capital = (word) => {\r\n\r\n        const lower = word.toLowerCase();\r\n\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{ height: '40px' }}>\r\n\r\n            {props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capital(props.alert.type)}</strong> : {props.alert.msg}.\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>}\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n","\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setmode] = useState('light')// when dark mode is enable or note\n\n  const toggleMode = () => {\n\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert('Hurray! Dark mode has been enabled', 'success')\n    }\n    else {\n\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Hurray! Light mode has been enabled', 'success')\n    }\n  }\n  const purpleMode = () => {\n\n    if (mode == 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#9400d3';\n    }\n    else {\n\n      setmode('white');\n      document.body.style.backgroundColor = 'white'\n    }\n\n\n\n  }\n\n  const [alert, setalert] = useState(null)\n\n  const showAlert = (message, type) => {\n\n    setalert({\n      'msg': message,\n      'type': type\n    })\n    setTimeout(() => {\n      setalert('');\n    }, 1500)\n  }\n\n\n\n\n  return (\n\n    <>\n    {/* <Router> */}\n\n\n      <Navbar title=\"Textutiles\" mode={mode} toggleMode={toggleMode} purpleMode={purpleMode} />\n      <Alert alert={alert} />\n\n      <div className=\"container my-3\">\n\n        {/* <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route> */}\n\n          {/* <Route exact path=\"/\"> */}\n            <Textform heading=\"Enter the text to analyze\" mode={mode} alert={showAlert}/>\n\n          {/* </Route>\n        </Switch> */}\n\n\n\n      \n\n      </div>\n    {/* </Router> */}\n      \n\n\n\n\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}